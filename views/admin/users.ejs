<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Usuarios</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal"
                data-bs-target="#createUserModal">
                Nuevo Usuario
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="table-responsive">
            <table id="usersTable" class="table table-striped table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Email</th>
                        <th>Rol</th>
                        <th>Fecha de Creación</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (typeof users !=='undefined' && users.length> 0) { %>
                        <% users.forEach(user=> { %>
                            <tr>
                                <td>
                                    <%= user.id %>
                                </td>
                                <td>
                                    <%= user.name %>
                                </td>
                                <td>
                                    <%= user.email %>
                                </td>
                                <td>
                                    <%= user.role %>
                                </td>
                                <td>
                                    <%= new Date(user.created_at).toLocaleDateString() %>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-outline-secondary"
                                        data-bs-toggle="modal" data-bs-target="#editUserModal"
                                        onclick="populateEditModal(<%= user.id %>, '<%= user.name %>', '<%= user.email %>', '<%= user.role %>')">
                                        Editar
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger"
                                        onclick="deleteUser(<%= user.id %>)">Eliminar</button>
                                </td>
                            </tr>
                            <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="6" class="text-center">No hay usuarios registrados.
                                        </td>
                                    </tr>
                                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal para Crear Usuario -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createUserModalLabel">Crear Nuevo Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createUserForm">
                    <div class="mb-3">
                        <label for="createUserName" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="createUserName" required>
                    </div>
                    <div class="mb-3">
                        <label for="createUserEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="createUserEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="createUserPassword" class="form-label">Contraseña</label>
                        <input type="password" class="form-control" id="createUserPassword" required>
                    </div>
                    <div class="mb-3">
                        <label for="createUserRole" class="form-label">Rol</label>
                        <select class="form-select" id="createUserRole" required>
                            <option value="">Seleccionar rol</option>
                            <option value="admin">Administrador</option>
                            <option value="client">Cliente</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="createUser()">Crear Usuario</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Editar Usuario -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Editar Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="editUserId">
                    <div class="mb-3">
                        <label for="editUserName" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="editUserName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editUserEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="editUserEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="editUserPassword" class="form-label">Nueva Contraseña (dejar en blanco para no
                            cambiar)</label>
                        <input type="password" class="form-control" id="editUserPassword">
                    </div>
                    <div class="mb-3">
                        <label for="editUserRole" class="form-label">Rol</label>
                        <select class="form-select" id="editUserRole" required>
                            <option value="">Seleccionar rol</option>
                            <option value="admin">Administrador</option>
                            <option value="client">Cliente</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="updateUser()">Actualizar Usuario</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Inicializar DataTable
    document.addEventListener('DOMContentLoaded', function () {
        if (typeof $ !== 'undefined' && $.fn.DataTable) {
            $('#usersTable').DataTable({
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json"
                },
                "order": [[0, "desc"]],
                "pageLength": 25
            });
        } else {
            console.error('jQuery o DataTables no se han cargado correctamente');
        }
    });

    // Función para crear un nuevo usuario
    function createUser() {
        const name = document.getElementById('createUserName').value;
        const email = document.getElementById('createUserEmail').value;
        const password = document.getElementById('createUserPassword').value;
        const role = document.getElementById('createUserRole').value;

        // Validación básica
        if (!name || !email || !password || !role) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Por favor, complete todos los campos.'
            });
            return;
        }

        // Enviar datos al servidor
        fetch('/admin/users', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, email, password, role })
        })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Usuario creado exitosamente.') {
                    // Cerrar el modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('createUserModal'));
                    modal.hide();

                    // Mostrar mensaje de éxito
                    Swal.fire({
                        icon: 'success',
                        title: '¡Éxito!',
                        text: 'Usuario creado correctamente.'
                    }).then(() => {
                        // Recargar la página para reflejar los cambios
                        window.location.reload();
                    });
                } else {
                    // Mostrar mensaje de error
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error desconocido al crear el usuario.'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error de conexión con el servidor.'
                });
            });
    }

    // Función para poblar el modal de edición con los datos del usuario
    function populateEditModal(id, name, email, role) {
        document.getElementById('editUserId').value = id;
        document.getElementById('editUserName').value = name;
        document.getElementById('editUserEmail').value = email;
        document.getElementById('editUserRole').value = role;
        document.getElementById('editUserPassword').value = '';
    }

    // Función para actualizar un usuario
    function updateUser() {
        const id = document.getElementById('editUserId').value;
        const name = document.getElementById('editUserName').value;
        const email = document.getElementById('editUserEmail').value;
        const password = document.getElementById('editUserPassword').value;
        const role = document.getElementById('editUserRole').value;

        // Preparar datos para enviar (solo incluir contraseña si no está vacía)
        const userData = { name, email, role };
        if (password) {
            userData.password = password;
        }

        // Enviar datos al servidor
        fetch(`/admin/users/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(userData)
        })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Usuario actualizado exitosamente.') {
                    // Cerrar el modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editUserModal'));
                    modal.hide();

                    // Mostrar mensaje de éxito
                    Swal.fire({
                        icon: 'success',
                        title: '¡Éxito!',
                        text: 'Usuario actualizado correctamente.'
                    }).then(() => {
                        // Recargar la página para reflejar los cambios
                        window.location.reload();
                    });
                } else {
                    // Mostrar mensaje de error
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Error desconocido al actualizar el usuario.'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error de conexión con el servidor.'
                });
            });
    }

    // Función para eliminar un usuario
    function deleteUser(userId) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "Esta acción no se puede deshacer.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/users/${userId}/delete`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'Usuario eliminado exitosamente.') {
                            // Mostrar mensaje de éxito
                            Swal.fire({
                                icon: 'success',
                                title: '¡Éxito!',
                                text: 'Usuario eliminado correctamente.'
                            }).then(() => {
                                // Recargar la página para reflejar los cambios
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message || 'Error al eliminar el usuario.'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error de conexión con el servidor.'
                        });
                    });
            }
        });
    }
</script>